{
    "ignoreerrors": {
        "category": "general",
        "type": "bool",
        "default": "False",
        "description": "Ignore download and postprocessing errors. The download will be considered successful even if the postprocessing fails",
        "search_count": 76,
        "add": "True"
    },
    "allowed_extractors": {
        "category": "general",
        "type": "list",
        "default": "[]",
        "description": "Extractor names to use separated by commas. You can also use regexes",
        "search_count": 3,
        "add": "True"
    },
    "force_generic_extractor": {
        "category": "general",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 71,
        "add": "True"
    },
    "default_search": {
        "category": "general",
        "type": "str",
        "default": null,
        "description": "Use this prefix for unqualified URLs. E.g. gvsearch2:python downloads two videos rom google videos for the search term python. Use the value auto to let yt-dlp guess (auto_warning to emit a warning when guessing). error just throws an error. The default value fixup_error repairs broken URLs, but emits an error if this is not possible instead of searching",
        "search_count": 76,
        "add": "Maybe"
    },
    "ignoreconfig": {
        "category": "general",
        "type": "bool",
        "default": "False",
        "description": "Don't load any more configuration files except those given by --config-locations. For backward compatibility",
        "search_count": 5,
        "add": "Maybe"
    },
    "config_locations": {
        "category": "general",
        "type": "str",
        "default": null,
        "description": "Location of the main configuration file; either the path to the config or its containing directory (- for stdin). Can be used multiple times and inside other configuration files",
        "search_count": 5,
        "add": "Maybe"
    },
    "extract_flat": {
        "category": "general",
        "type": "str",
        "default": null,
        "description": "Do not extract the videos of a playlist, only list them",
        "search_count": 58,
        "add": "Maybe"

    },
    "live_from_start": {
        "category": "general",
        "type": "str",
        "default": null,
        "description": "Download livestreams from the start. Currently only supported for YouTube (Experimental)",
        "search_count": 6,
        "add": "Maybe"
    },
    "wait_for_video": {
        "category": "general",
        "type": "str",
        "default": null,
        "description": "Wait for scheduled streams to become available. Pass the minimum number of seconds (or range) to wait between retries",
        "search_count": 7,
        "add": "Maybe"
    },
    "mark_watched": {
        "category": "general",
        "type": "bool",
        "default": "False",
        "description": "Mark videos watched (even with --simulate)",
        "search_count": 22,
        "add": "Maybe"
    },
    "no_color": {
        "category": "general",
        "type": "bool",
        "default": "False",
        "description": "Do not emit color codes in output (Alias: --no-colours)",
        "search_count": 57,
        "add": "Maybe"
    },
    "compat_opts": {
        "category": "general",
        "type": "str",
        "default": null,
        "description": "Options that can help keep compatibility with youtube-dl or youtube-dlc configurations by reverting some of the changes made in yt-dlp. See Differences in default behavior for details. Allowed_values: 'filename', 'filename-sanitization', 'format-sort', 'abort-on-error', 'format-spec', 'no-playlist-metafiles', 'multistreams', 'no-live-chat', 'playlist-index', 'list-formats', 'no-direct-merge', 'no-attach-info-json', 'embed-metadata', 'embed-thumbnail-atomicparsley', 'seperate-video-versions', 'no-clean-infojson', 'no-keep-subs', 'no-certifi', 'no-youtube-channel-redirect', 'no-youtube-unavailable-videos', 'no-youtube-prefer-utc-upload-date'",
        "search_count": 17,
        "add": "True"
    },
    "proxy": {
        "category": "network",
        "type": "str",
        "default": "None",
        "description": "Use the specified HTTP/HTTPS/SOCKS proxy. To enable SOCKS proxy. e.g. socks5://user:pass@127.0.0.1:1080/. Pass in an empty string (--proxy '') for direct connection",
        "search_count": 81,
        "add": "True"
    },
    "socket_timeout": {
        "category": "network",
        "type": "float",
        "default": "None",
        "description": "Time to wait before giving up",
        "search_count": 12,
        "add": "True"
    },
    "source_address": {
        "category": "network",
        "type": "str",
        "default": null,
        "description": "Client-side IP address to bind to, Or: '0.0.0.0' in order to Make all connections via IPv4. Or: '::' Make all connections via IPv6",
        "search_count": 20,
        "add": "True"
    },
    "geo_verification_proxy": {
        "category": "geo",
        "type": "str",
        "default": "None",
        "description": "Use this proxy to verify the IP address for some geo-restricted sites. The default proxy specified by --proxy (or none if the option is not present) is used for the actual downloading",
        "search_count": 13,
        "add": "Maybe"
    },
    "cn_verification_proxy": {
        "category": "geo",
        "type": "str",
        "default": "None",
        "description": "",
        "search_count": 10,
        "add": "Maybe"
    },
    "geo_bypass": {
        "category": "geo",
        "type": "bool",
        "default": "True",
        "description": "Bypass geographic restriction via faking X-Forwarded-For HTTP header (default)",
        "search_count": 31,
        "add": "True"
    },
    "geo_bypass_country": {
        "category": "geo",
        "type": "bool",
        "default": "False",
        "description": "Force bypass geographic restriction with explicitly provided two-letter ISO 3166-2 country code",
        "search_count": 22,
        "add": "True"
    },
    "geo_bypass_ip_block": {
        "category": "geo",
        "type": "bool",
        "default": "False",
        "description": "Force bypass geographic restriction with explicitly provided IP block in CIDR notation",
        "search_count": 13,
        "add": "True"
    },
    "playliststart": {
        "category": "selection",
        "type": "int",
        "default": "1",
        "description": "Position to start downloading playlist. Default is 1",
        "search_count": 37,
        "add": "True"
    },
    "playlistend": {
        "category": "selection",
        "type": "int",
        "default": "None",
        "description": "Position to end downloading playlist (default is last)",
        "search_count": 19,
        "add": "True"
    },
    "playlist_items": {
        "category": "selection",
        "type": "str",
        "default": "None",
        "description": "Comma separated playlist_index of the videos to download. You can specify a range using \"[START]:[STOP][:STEP]\". For backward compatibility",
        "search_count": 35,
        "add": "True"
    },
    "matchtitle": {
        "category": "selection",
        "type": "str",
        "default": null,
        "description": "REGEX to match video title",
        "search_count": 13,
        "add": "True"
    },
    "rejecttitle": {
        "category": "selection",
        "type": "str",
        "default": null,
        "description": "REGEX to reject video title",
        "search_count": 14,
        "add": "True"
    },
    "min_filesize": {
        "category": "selection",
        "type": "str",
        "default": "None",
        "description": "Do not download any videos smaller than SIZE, e.g. 50k or 44.6M",
        "search_count": 11,
        "add": "True"
    },
    "max_filesize": {
        "category": "selection",
        "type": "str",
        "default": "None",
        "description": "Do not download any videos larger than SIZE, e.g. 50k or 44.6M",
        "search_count": 13,
        "add": "True"
    },
    "date": {
        "category": "selection",
        "type": "str",
        "default": "None",
        "description": "Download only videos uploaded on this date. The date can be YYYYMMDD or in the format [now|today|yesterday][-N[day|week|month|year]]. E.g. --date today-2weeks",
        "search_count": 69,
        "add": "True"
    },
    "datebefore": {
        "category": "selection",
        "type": "str",
        "default": "None",
        "description": "Download only videos uploaded on or before this date. The date formats accepted is the same as --date",
        "search_count": 20,
        "add": "True"
    },
    "dateafter": {
        "category": "selection",
        "type": "str",
        "default": "None",
        "description": "Download only videos uploaded on or after this date. The date formats accepted is the same as --date",
        "search_count": 19,
        "add": "True"
    },
    "min_views": {
        "category": "selection",
        "type": "int",
        "default": "None",
        "description": "Minimum view count to consider a video eligible for download",
        "search_count": 12,
        "add": "True"
    },
    "max_views": {
        "category": "selection",
        "type": "int",
        "default": "None",
        "description": "Maximum view count to consider a video eligible for download",
        "search_count": 11,
        "add": "True"
    },
    "match_filter": {
        "category": "selection",
        "type": "str",
        "default": null,
        "description": "Generic video filter. Any OUTPUT TEMPLATE field can be compared with a number or a string using the operators defined in Filtering Formats. You can also simply specify a field to match if the field is present, use !field to check if the field is not present, and & to check multiple conditions. Use a \\ to escape & or quotes if needed. If used multiple times, the filter matches if atleast one of the conditions are met. E.g. --match-filter !is_live --match-filter like_count>?100 & description~=(?i)\\bcats \\& dogs\\b matches only videos that are not live OR those that have a like count more than 100 (or the like field is not available) and also has a description that contains the phrase cats & dogs (caseless). Use --match-filter - to interactively ask whether to download each video",
        "search_count": 16,
        "add": "True"
    },
    "noplaylist": {
        "category": "selection",
        "type": "bool",
        "default": "False",
        "description": "False = Download only the video, if the URL refers to a video and a playlist. True = Download the playlist, if the URL refers to a video and a playlist",
        "search_count": 31,
        "add": "True"
    },
    "age_limit": {
        "category": "selection",
        "type": "int",
        "default": "None",
        "description": "Download only videos suitable for the given age",
        "search_count": 25,
        "add": "True"
    },
    "download_archive": {
        "category": "selection",
        "type": "str",
        "default": null,
        "description": "Download only videos not listed in the archive file. Record the IDs of all downloaded videos in it. Path to the archive (.txt) file.",
        "search_count": 67,
        "add": "True"
    },
    "max_downloads": {
        "category": "selection",
        "type": "int",
        "default": "None",
        "description": "Abort after downloading NUMBER files",
        "search_count": 12,
        "add": "True"
    },
    "break_on_existing": {
        "category": "selection",
        "type": "bool",
        "default": "False",
        "description": "Stop the download process when encountering a file that is in the archive",
        "search_count": 74,
        "add": "True"
    },
    "break_on_reject": {
        "category": "selection",
        "type": "bool",
        "default": "False",
        "description": "Stop the download process when encountering a file that has been filtered out",
        "search_count": 63,
        "add": "True"
    },
    "break_per_url": {
        "category": "selection",
        "type": "bool",
        "default": "False",
        "description": "--break-on-existing, --break-on-reject, --max-downloads, and autonumber resets per input URL",
        "search_count": 27,
        "add": "True"
    },
    "skip_playlist_after_errors": {
        "category": "selection",
        "type": "int",
        "default": "None",
        "description": "Number of allowed failures until the rest of the playlist is skipped",
        "search_count": 9,
        "add": "True"
    },
    "include_ads": {
        "category": "selection",
        "type": "bool",
        "default": "False",
        "description": "Include ads or not",
        "search_count": 11,
        "add": "True"
    },
    "username": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Login with this account ID",
        "search_count": 58,
        "add": "True"
    },
    "password": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Account password. If this option is left out, yt-dlp will ask interactively",
        "search_count": 86,
        "add": "True"
    },
    "twofactor": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Two-factor authentication code",
        "search_count": 19,
        "add": "True"
    },
    "usenetrc": {
        "category": "authentication",
        "type": "bool",
        "default": "False",
        "description": "Use .netrc authentication data",
        "search_count": 12,
        "add": "True"
    },
    "netrc_location": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Location of .netrc authentication data; either the path or its containing directory. Defaults to ~/.netrc",
        "search_count": 4,
        "add": "True"
    },
    "videopassword": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Video password (vimeo, youku)",
        "search_count": 20,
        "add": "True"
    },
    "ap_mso": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Adobe Pass multiple-system operator (TV provider) identifier, use --ap-list-mso for a list of available MSOs",
        "search_count": 11,
        "add": "Maybe"
    },
    "ap_username": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Multiple-system operator account login",
        "search_count": 10,
        "add": "Maybe"
    },
    "ap_password": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Multiple-system operator account password. If this option is left out, yt-dlp will ask interactively",
        "search_count": 10,
        "add": "Maybe"
    },
    "ap_list_mso": {
        "category": "authentication",
        "type": "bool",
        "default": "False",
        "description": "List all supported multiple-system operators",
        "search_count": 6,
        "add": "Maybe"
    },
    "client_certificate": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Path to client certificate file in PEM format. May include the private key",
        "search_count": 6,
        "add": "True"
    },
    "client_certificate_key": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Path to private key file for client certificate",
        "search_count": 6,
        "add": "True"
    },
    "client_certificate_password": {
        "category": "authentication",
        "type": "str",
        "default": null,
        "description": "Password for client certificate private key, if encrypted. If not provided, and the key is encrypted, yt-dlp will ask interactively",
        "search_count": 6
    },
    "writesubtitles": {
        "category": "subtitles",
        "type": "bool",
        "default": "False",
        "description": "True = Write subtitle file. False = Do not write subtitle file",
        "search_count": 17,
        "add": "True"
    },
    "writeautomaticsub": {
        "category": "subtitles",
        "type": "bool",
        "default": "False",
        "description": "Write automatically generated subtitle file (Alias: --write-automatic-subs)",
        "search_count": 17,
        "add": "True"
    },
    "allsubtitles": {
        "category": "subtitles",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 16,
        "add": "True"
    },
    "listsubtitles": {
        "category": "subtitles",
        "type": "bool",
        "default": "False",
        "description": "List available subtitles of each video. Simulate unless --no-simulate is used",
        "search_count": 6,
        "add": "False"
    },
    "subtitlesformat": {
        "category": "subtitles",
        "type": "str",
        "default": "best",
        "description": "Subtitle format; accepts formats preference, e.g. srt or ass/srt/best",
        "search_count": 8,
        "add": "True"
    },
    "subtitleslangs": {
        "category": "subtitles",
        "type": "'str'",
        "default": "[]",
        "description": "Languages of the subtitles to download (can be regex) or all separated by commas, e.g. --sub-langs en.*,ja. You can prefix the language code with a - to exclude it from the requested languages, e.g. --sub-langs all,-live_chat. Use --list-subs for a list of available language tags",
        "search_count": 24,
        "add": "True"
    },
    "concurrent_fragment_downloads": {
        "category": "downloader",
        "type": "int",
        "default": "1",
        "description": "",
        "search_count": 0,
        "add": "True"
    },
    "ratelimit": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "Maximum download rate in bytes per second, e.g. 50K or 4.2M",
        "search_count": 73,
        "add": "True"
    },
    "throttledratelimit": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "'Minimum download rate in bytes per second below which throttling is assumed and the video data is re-extracted",
        "search_count": 156
    },
    "retries": {
        "category": "downloader",
        "type": "str",
        "default": "10",
        "description": "",
        "search_count": 5200
    },
    "file_access_retries": {
        "category": "downloader",
        "type": "str",
        "default": "3",
        "description": "",
        "search_count": 10
    },
    "fragment_retries": {
        "category": "downloader",
        "type": "str",
        "default": "10",
        "description": "",
        "search_count": 906
    },
    "retry_sleep": {
        "category": "downloader",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 431
    },
    "skip_unavailable_fragments": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 16500
    },
    "keep_fragments": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 888
    },
    "buffersize": {
        "category": "downloader",
        "type": "str",
        "default": "'1024'",
        "description": "'Size of download buffer",
        "search_count": 4530
    },
    "noresizebuffer": {
        "category": "downloader",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 979
    },
    "http_chunk_size": {
        "category": "downloader",
        "type": "str",
        "default": "None",
        "description": "(            'Size of a chunk for chunk-based HTTP downloading",
        "search_count": 9850
    },
    "test": {
        "category": "downloader",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 302000
    },
    "playlist_reverse": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1520
    },
    "playlist_random": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 806
    },
    "lazy_playlist": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 6
    },
    "xattr_set_filesize": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 579
    },
    "hls_prefer_native": {
        "category": "downloader",
        "type": "str",
        "default": "None",
        "description": "",
        "search_count": 27200
    },
    "hls_use_mpegts": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 464
    },
    "download_ranges": {
        "category": "downloader",
        "type": "str",
        "default": null,
        "description": "(            'Download only chapters whose title matches the given regular expression. '            'Time ranges prefixed by a \"*\" can also be used in place of chapters to download the specified range. '            'Needs ffmpeg. This option can be used multiple times to download multiple sections",
        "search_count": 61
    },
    "external_downloader": {
        "category": "downloader",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 3860
    },
    "external_downloader_args": {
        "category": "downloader",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 753
    },
    "encoding": {
        "category": "workarounds",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 108000
    },
    "legacy_server_connect": {
        "category": "workarounds",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 48
    },
    "no_check_certificate": {
        "category": "workarounds",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 811
    },
    "prefer_insecure": {
        "category": "workarounds",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 794
    },
    "user_agent": {
        "category": "workarounds",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 5720
    },
    "referer": {
        "category": "workarounds",
        "type": "str",
        "default": "None",
        "description": "",
        "search_count": 49300
    },
    "headers": {
        "category": "workarounds",
        "type": "'str'",
        "default": "{}",
        "description": "'Specify a custom HTTP header and its value",
        "search_count": 471000
    },
    "bidi_workaround": {
        "category": "workarounds",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 733
    },
    "sleep_interval_requests": {
        "category": "workarounds",
        "type": "float",
        "default": null,
        "description": "",
        "search_count": 68
    },
    "sleep_interval": {
        "category": "workarounds",
        "type": "float",
        "default": null,
        "description": "",
        "search_count": 20900
    },
    "max_sleep_interval": {
        "category": "workarounds",
        "type": "float",
        "default": null,
        "description": "",
        "search_count": 405
    },
    "sleep_interval_subtitles": {
        "category": "workarounds",
        "type": "int",
        "default": "0",
        "description": "",
        "search_count": 133
    },
    "quiet": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "'Activate quiet mode. If used with --verbose",
        "search_count": 30600
    },
    "no_warnings": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 24000
    },
    "simulate": {
        "category": "verbosity",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 11700
    },
    "ignore_no_formats_error": {
        "category": "verbosity",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 324
    },
    "skip_download": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 17100
    },
    "forceprint": {
        "category": "verbosity",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 75
    },
    "print_to_file": {
        "category": "verbosity",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 36
    },
    "geturl": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 16300
    },
    "gettitle": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 3100
    },
    "getid": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 9470
    },
    "getthumbnail": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 1120
    },
    "getdescription": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 2040
    },
    "getduration": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 2550
    },
    "getfilename": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 3190
    },
    "getformat": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 1080
    },
    "dumpjson": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "'Quiet",
        "search_count": 597
    },
    "dump_single_json": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "(            'Quiet",
        "search_count": 553
    },
    "print_json": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 339
    },
    "force_write_download_archive": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "(            'Force download archive entries to be written as far as no errors occur",
        "search_count": 77
    },
    "progress_with_newline": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 707
    },
    "noprogress": {
        "category": "verbosity",
        "type": "str",
        "default": null,
        "description": "'Show progress bar",
        "search_count": 125000
    },
    "consoletitle": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 1320
    },
    "progress_template": {
        "category": "verbosity",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 897
    },
    "verbose": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 42300
    },
    "dump_intermediate_pages": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 667
    },
    "write_pages": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 570
    },
    "load_pages": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 8
    },
    "youtube_print_sig_code": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 738
    },
    "debug_printtraffic": {
        "category": "verbosity",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 617
    },
    "call_home": {
        "category": "verbosity",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 577
    },
    "batchfile": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 73900
    },
    "useid": {
        "category": "filesystem",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 768
    },
    "paths": {
        "category": "filesystem",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 26000
    },
    "outtmpl": {
        "category": "filesystem",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 2280
    },
    "outtmpl_na_placeholder": {
        "category": "filesystem",
        "type": "str",
        "default": "'NA'",
        "description": "",
        "search_count": 147
    },
    "autonumber_size": {
        "category": "filesystem",
        "type": "int",
        "default": null,
        "description": "",
        "search_count": 15800
    },
    "autonumber_start": {
        "category": "filesystem",
        "type": "int",
        "default": "1",
        "description": "",
        "search_count": 12700
    },
    "restrictfilenames": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "'Allow Unicode characters",
        "search_count": 2170
    },
    "windowsfilenames": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 6380
    },
    "trim_file_name": {
        "category": "filesystem",
        "type": "int",
        "default": "0",
        "description": "",
        "search_count": 168
    },
    "overwrites": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "'Do not overwrite the video",
        "search_count": 3610
    },
    "continue_dl": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "(            'Do not resume partially downloaded fragments. '            'If the file is not fragmented",
        "search_count": 3
    },
    "nopart": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1480
    },
    "updatetime": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2470
    },
    "writedescription": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2250
    },
    "writeinfojson": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1840
    },
    "writeannotations": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1420
    },
    "allow_playlist_files": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "'Do not write playlist metadata when using --write-info-json",
        "search_count": 331
    },
    "clean_infojson": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 66
    },
    "getcomments": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 492
    },
    "load_info_filename": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 535
    },
    "cookiefile": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1650
    },
    "cookiesfrombrowser": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1720
    },
    "cachedir": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2970
    },
    "rm_cachedir": {
        "category": "filesystem",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 419
    },
    "writethumbnail": {
        "category": "thumbnail",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2250
    },
    "list_thumbnails": {
        "category": "thumbnail",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 630
    },
    "writelink": {
        "category": "link",
        "type": "bool",
        "default": "False",
        "description": "'Write an internet shortcut file",
        "search_count": 2000
    },
    "writeurllink": {
        "category": "link",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 79
    },
    "writewebloclink": {
        "category": "link",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 49
    },
    "writedesktoplink": {
        "category": "link",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 54
    },
    "extractaudio": {
        "category": "postproc",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 21400
    },
    "audioformat": {
        "category": "postproc",
        "type": "str",
        "default": "'best'",
        "description": "",
        "search_count": 569
    },
    "audioquality": {
        "category": "postproc",
        "type": "str",
        "default": "'5'",
        "description": "",
        "search_count": 1080
    },
    "remuxvideo": {
        "category": "postproc",
        "type": "str",
        "default": "None",
        "description": "(            'Remux the video into another container if necessary '            f'(currently supported: {\"",
        "search_count": 3250
    },
    "recodevideo": {
        "category": "postproc",
        "type": "str",
        "default": "None",
        "description": "",
        "search_count": 834
    },
    "postprocessor_args": {
        "category": "postproc",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 4060
    },
    "keepvideo": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 23400
    },
    "nopostoverwrites": {
        "category": "postproc",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 744
    },
    "embedsubtitles": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 28000
    },
    "embedthumbnail": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 3690
    },
    "addmetadata": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 705
    },
    "addchapters": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2090
    },
    "embed_infojson": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2
    },
    "metafromtitle": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 345
    },
    "parse_metadata": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2390
    },
    "xattrs": {
        "category": "postproc",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 22900
    },
    "concat_playlist": {
        "category": "postproc",
        "type": "str",
        "default": "'multi_video'",
        "description": "",
        "search_count": 411
    },
    "fixup": {
        "category": "postproc",
        "type": "str",
        "default": "None",
        "description": "",
        "search_count": 1800
    },
    "prefer_ffmpeg": {
        "category": "postproc",
        "type": "bool",
        "default": "True",
        "description": "",
        "search_count": 1910
    },
    "ffmpeg_location": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1520
    },
    "exec_cmd": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 840
    },
    "exec_before_dl_cmd": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 67
    },
    "convertsubtitles": {
        "category": "postproc",
        "type": "str",
        "default": "None",
        "description": "",
        "search_count": 544
    },
    "convertthumbnails": {
        "category": "postproc",
        "type": "str",
        "default": "None",
        "description": "(            'Convert the thumbnails to another format '            f'(currently supported: {\"",
        "search_count": 1560
    },
    "split_chapters": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1280
    },
    "remove_chapters": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 85
    },
    "force_keyframes_at_cuts": {
        "category": "postproc",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 54
    },
    "add_postprocessors": {
        "category": "postproc",
        "type": "'str'",
        "default": "[]",
        "description": "",
        "search_count": 2
    },
    "sponsorblock_mark": {
        "category": "sponsorblock",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 9
    },
    "sponsorblock_remove": {
        "category": "sponsorblock",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 10
    },
    "sponsorblock_chapter_title": {
        "category": "sponsorblock",
        "type": "str",
        "default": "DEFAULT_SPONSORBLOCK_CHAPTER_TITLE",
        "description": "(            'An output template for the title of the SponsorBlock chapters created by --sponsorblock-mark. '            'The only available fields are start_time",
        "search_count": 9
    },
    "no_sponsorblock": {
        "category": "sponsorblock",
        "type": "bool",
        "default": "False",
        "description": "",
        "search_count": 9
    },
    "sponsorblock_api": {
        "category": "sponsorblock",
        "type": "str",
        "default": "'https://sponsor.ajay.app'",
        "description": "'SponsorBlock API location",
        "search_count": 8
    },
    "sponskrub": {
        "category": "sponsorblock",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 5000
    },
    "sponskrub_cut": {
        "category": "sponsorblock",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 103
    },
    "sponskrub_force": {
        "category": "sponsorblock",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 69
    },
    "sponskrub_path": {
        "category": "sponsorblock",
        "type": "str",
        "default": "''",
        "description": "",
        "search_count": 51
    },
    "sponskrub_args": {
        "category": "sponsorblock",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 52
    },
    "extractor_retries": {
        "category": "extractor",
        "type": "str",
        "default": "3",
        "description": "",
        "search_count": 67
    },
    "dynamic_mpd": {
        "category": "extractor",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 344
    },
    "hls_split_discontinuity": {
        "category": "extractor",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 1430
    },
    "extractor_args": {
        "category": "extractor",
        "type": "'str'",
        "default": "{}",
        "description": "",
        "search_count": 242
    },
    "youtube_include_dash_manifest": {
        "category": "extractor",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 2580
    },
    "youtube_include_hls_manifest": {
        "category": "extractor",
        "type": "str",
        "default": null,
        "description": "",
        "search_count": 82
    }
}